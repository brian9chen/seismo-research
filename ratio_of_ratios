{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Add to shallow event code:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "station_names_shallow = []\n",
    "ratios_shallow = []\n",
    "\n",
    "for i in good_traces:\n",
    "    station_names_shallow.append(i[\"stnm\"])\n",
    "    ratios_shallow.append(i[\"snlgr\"])\n",
    "    \n",
    "# print(station_names_shallow)\n",
    "    \n",
    "%store station_names_shallow\n",
    "%store ratios_shallow"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Add to deep event code:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import copy\n",
    "%store -r good_traces\n",
    "%store -r station_names_shallow\n",
    "%store -r ratios_shallow\n",
    "\n",
    "copy_good_traces = copy.deepcopy(good_traces)\n",
    "\n",
    "common_stations = []\n",
    "ratios = []\n",
    "\n",
    "for i in copy_good_traces:\n",
    "    for j in range (len(station_names_shallow)):\n",
    "        if i[\"stnm\"] == station_names_shallow[j]:\n",
    "            common_stations.append(copy.deepcopy(i))\n",
    "            ratios.append(ratios_shallow[j])\n",
    "            \n",
    "\n",
    "            \n",
    "for i in range (len(common_stations)):\n",
    "\n",
    "    common_stations[i][\"snlgr\"] = common_stations[i][\"snlgr\"]/ratios[i]\n",
    "    \n",
    "\n",
    "all_stlo = np.array([common_stations[k].get('stlo') for k in range(0,len(common_stations))])\n",
    "all_stla = np.array([common_stations[k].get('stla') for k in range(0,len(common_stations))])\n",
    "all_ratio = np.array([common_stations[k].get('snlgr') for k in range(0,len(common_stations))])\n",
    "all_info = np.column_stack((all_stlo,all_stla,all_ratio))\n",
    "stnfile_name =  pjoin(directory,'ratio.txt')\n",
    "np.savetxt(stnfile_name,all_info,fmt='%1.3f',newline=\"\\n\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
